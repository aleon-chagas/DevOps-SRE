apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-frontend
  namespace: weather-app
  labels:
    app.kubernetes.io/name: weather-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: weather-app
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: weather-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: weather-frontend
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: weather-frontend
        image: weather-frontend:1.0.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: REACT_APP_API_URL
          valueFrom:
            configMapKeyRef:
              name: weather-config
              key: REACT_APP_API_URL
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      nodeSelector:
        kubernetes.io/hostname: ip-10-0-3-119
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: weather-frontend-service
  namespace: weather-app
  labels:
    app.kubernetes.io/name: weather-frontend
    app.kubernetes.io/component: frontend
spec:
  selector:
    app.kubernetes.io/name: weather-frontend
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP